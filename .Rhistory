scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL, title = "Climatological Preciptiation rate for July ")
ggplot()+
metR::geom_contour_fill(data = anomalies,
aes(x = lon, y = lat, z = anomaly), na.fill = TRUE, bins = 6)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_legend(title = expression(Air~temperature(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL, title = "Climatological Preciptiation rate for July ")
ggplot()+
metR::geom_contour_fill(data = anomalies,
aes(x = lon, y = lat, z = anomaly), na.fill = TRUE, bins = 6)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL, title = "Climatological Preciptiation rate for July ")
ggplot()+
metR::geom_contour_fill(data = anomalies,
aes(x = lon, y = lat, z = anomaly), na.fill = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL, title = "Climatological Preciptiation rate for July ")
ggplot()+
metR::geom_contour_fill(data = anomalies,
aes(x = lon, y = lat, z = anomaly), na.fill = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL)
ggplot()+
metR::geom_contour_fill(data = anomalies,
aes(x = lon, y = lat, z = anomaly), na.fill = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature~(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL)
ggplot()+
metR::geom_contour_fill(data = anomalies,
aes(x = lon, y = lat, z = anomaly), na.fill = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-3,3,1))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature~(degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL)
ggplot()+
metR::geom_contour_fill(data = air.temp.tb %>% filter(month == "January"),
aes(x = lon, y = lat, z = temperature), na.fill = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(8,30,4))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Precipitation~rate(~ms^{-1})),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL, title = "Climatological Preciptiation rate for January ")
ggplot()+
metR::geom_contour_fill(data = air.temp.tb %>% filter(month == "July"),
aes(x = lon, y = lat, z = temperature), na.fill = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(8,30,4))+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Air~temperature~(degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL)
ggplot() +
metR::geom_contour_fill(data = temperature.anomaly.wio,
aes(x = lon, y = lat, z = anomaly), na.fill = T, bins = 120)+
metR::geom_contour2(data = temperature.anomaly.wio,
aes(x = lon, y = lat, z = anomaly), na.fill = T)+
metR::geom_text_contour(data = temperature.anomaly.wio,
aes(x = lon, y = lat, z = anomaly), na.fill = T,
check_overlap = TRUE, parse = TRUE)+
geom_sf(data =  world, col = 1, fill = "grey80")+
coord_sf(xlim = c(30,130), ylim = c(-40,30), clip = "on", expand = FALSE)+
scale_fill_gradientn(colours = oce::oce.colors9A(120), breaks = seq(-4,4,2))+
# metR::scale_fill_divergent()+
scale_y_continuous(breaks = seq(-30,20,10), labels = metR::LatLabel(seq(-30,20,10)))+
scale_x_continuous(breaks = seq(40,120,20), labels = metR::LonLabel(seq(40,120,20)))+
theme_bw()+
theme(legend.position = "bottom", panel.background = element_blank(),
axis.text = element_text(size = 11, colour = "black"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))+
guides(fill = guide_colorbar(title = expression(Temperature~anomaly(~degree*C)),
title.position = "top",
title.hjust = 0.5,
direction = "horizontal",
reverse = FALSE,
barwidth = unit(8, "cm"),
barheight = unit(.4, "cm")))+
# annotate(geom = "text", x = 170 ,y = 75,  label = "a)", col = "white")+
labs(x = NULL, y = NULL, title = "Climatological Annual Temperature Anomaly")
data.frame(lon = c(40.2, 43.8), lat = c(-6.1, -7.3)) %>% st_as_sf(coords = c("lon", "lat")) %>% st_set_crs(4326)
stations = data.frame(lon = c(40.2, 43.8), lat = c(-6.1, -7.3)) %>%
st_as_sf(coords = c("lon", "lat")) %>% st_set_crs(4326)
ggplot() +
geom_sf(data = stations)
ggplot() +
geom_sf(data = stations, size = 2)
ggplot() +
geom_sf(data = stations, size = 5)
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.2, -7.2))
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale()
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale()+
ggspatial::annotation_north_arrow()
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow()
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow()
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering)
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering)
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"))
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"))
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial:: annotation_north_arrow(which_north = "true")
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"))
ggplot() +
geom_sf(data = stations, size = 5)+
coord_sf(xlim = c(40, 44), ylim = c(-6.0, -7.4))+
ggspatial::annotation_scale(location = "bl", width_hint = 0.4) +
ggspatial::annotation_north_arrow(location = "bt", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"))
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
ggspatial::annotation_north_arrow(location = "bt", which_north = "true",
data.frame(lon = c(40.2, 43.8), lat = c(-6.1, -7.3)) %>% st_as_sf(coords = c("lon", "lat")) %>% st_set_crs(4326)
points()
point
ggplot()+geom_sf(data = point)
data.frame(lon = c(40.2, 43.8), lat = c(-6.1, -7.3)) %>% st_as_sf(coords = c("lon", "lat")) %>% st_set_crs(4326)
ggplot()+geom_sf(data = point)
ggplot()+geom_sf(data = point)+coord_sf(crs = "+proj=moll")
ggplot()+geom_sf(data = point)+coord_sf(crs = "+proj=mill")
ggplot()+geom_sf(data = point)+coord_sf(crs = "+proj=merc")
africa = st_read("e:/GIS/Tanzania spatial data Bank/EAF14 Tanzania spatial datasets/africa/Spatial/AdmInfr/afcntry.shp")
ggplot()+geom_sf(data = africa)
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=merc")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=mill")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=hammer")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll")+ggspatial::annotation_scale()
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll")+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow()
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll")+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow(which_north = "true")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=mill")+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow(which_north = "true")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll")+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow(which_north = "true")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll", xlim = c(20,60), ylim = c(-35,40))+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow(which_north = "true")
ggplot()+geom_sf(data = africa)+coord_sf(crs = "+proj=moll", xlim = c(20,60), ylim = c(-35,0))+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow(which_north = "true")
ggplot()+geom_sf(data = africa)+coord_sf(xlim = c(20,60), ylim = c(-35,0))+ggspatial::annotation_scale()+ggspatial::annotation_north_arrow(which_north = "true")
require(tidyverse)
require(sf)
require(oce)
locations = readxl::read_excel("e:/Data Manipulation/ctd_bagamoyo/Coordinates.xlsx")
locations
locations %>% filter(!is.na(Long))
# remove empty rows
locations = locations %>% filter(!is.na(Long))
locations = readxl::read_excel("e:/Data Manipulation/ctd_bagamoyo/Coordinates.xlsx")
# remove empty rows
locations %>% filter(!is.na(Long))
# remove empty rows
locations %>% filter(!is.na(Long)) %>% separate(Lat, c("latd", "latmi"), sep = " ")
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = -2)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
mutate(Latitude = lat+latmi/60)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
mutate(Latitude = lat %>% as.integer()+latmi %>%as.numeric()/60)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 2) %>%
mutate(Latitude = lat %>% as.integer()+latmi %>%as.numeric()/60)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = lat %>% as.integer()+latmi %>%as.numeric()/60)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = lat %>% as.integer()+latmi %>%as.numeric()/60,
Longitude = lon %>% as.integer()+lonmi %>%as.numeric()/60)
# remove empty rows
locations %>% filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = lat %>% as.integer()+latmi %>%as.numeric()/60,
Longitude = lon %>% as.integer()+lonmi %>%as.numeric()/60) %>%
select(station = 1, lon = Longitude, lat = Latitude)
locations = readxl::read_excel("e:/Data Manipulation/ctd_bagamoyo/Coordinates.xlsx")
# remove empty rows and change to decimal minutes
locations = locations %>%
filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = lat %>% as.integer()+latmi %>%as.numeric()/60,
Longitude = lon %>% as.integer()+lonmi %>%as.numeric()/60) %>%
select(station = 1, lon = Longitude, lat = Latitude)
locations
locations %>% st_as_sf(coords = c("lon", "lat"))
locations %>% st_as_sf(coords = c("lon", "lat")) %>% st_set_crs(4326)
locations.sf = locations %>%
st_as_sf(coords = c("lon", "lat")) %>%
st_set_crs(4326)
locations.sf
mapview::mapview(locations.sf)
locations
locations = readxl::read_excel("e:/Data Manipulation/ctd_bagamoyo/Coordinates.xlsx")
# remove empty rows and change to decimal minutes
locations = locations %>%
filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = -1*(lat %>% as.integer()+latmi %>%as.numeric()/60),
Longitude = lon %>% as.integer()+lonmi %>%as.numeric()/60) %>%
select(station = 1, lon = Longitude, lat = Latitude)
locations
locations.sf = locations %>%
st_as_sf(coords = c("lon", "lat")) %>%
st_set_crs(4326)
mapview::mapview(locations.sf)
ggplot() +
geom_sf(data = locations.sf, size = 4)
locations
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf(crs = "+proj=moll")
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf(crs = "+proj=milll")
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf(crs = "+proj=mill")
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf(crs = "+proj=mill", xlim = c(38.5, 39.4))
ggplot() +
geom_sf(data = locations.sf, size = 4)
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf(crs = "+proj=mill", xlim = c(38.5, 39.4), ylim = c(-6.5, -6.35))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf(crs = "+proj=merc", xlim = c(38.5, 39.4), ylim = c(-6.5, -6.35))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.5, 39.4), ylim = c(-6.5, -6.35))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.8, 39.4), ylim = c(-6.5, -6.35))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.95, 39.4), ylim = c(-6.5, -6.35))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.95, 39.25), ylim = c(-6.5, -6.35))
ggplot() +
geom_sf(data = locations.sf, size = 4)
read.ctd("e:/Data Manipulation/ctd_bagamoyo/CTD1.hex")
read.ctd.sbe("e:/Data Manipulation/ctd_bagamoyo/CTD1.hex")
install.packages(c("DiagrammeR", "fields", "filehash", "igraph", "nlme", "shiny", "testthat", "xtable"))
locations = readxl::read_excel("e:/Data Manipulation/ctd_bagamoyo/Coordinates.xlsx")
# remove empty rows and change to decimal minutes
locations = locations %>%
filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = -1*(lat %>% as.integer()+latmi %>%as.numeric()/60),
Longitude = lon %>% as.integer()+lonmi %>%as.numeric()/60) %>%
select(station = 1, lon = Longitude, lat = Latitude)
require(tidyverse)
require(sf)
require(oce)
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.95, 39.25), ylim = c(-6.5, -6.35))
locations = readxl::read_excel("e:/Data Manipulation/ctd_bagamoyo/Coordinates.xlsx")
# remove empty rows and change to decimal minutes
locations = locations %>%
filter(!is.na(Long)) %>%
separate(Lat, c("latd", "latmi"), sep = " ") %>%
separate(latd, "lat", sep = 2) %>%
separate(Long, c("lond", "lonmi"), sep = " ") %>%
separate(lond, "lon", sep = 3) %>%
mutate(Latitude = -1*(lat %>% as.integer()+latmi %>%as.numeric()/60),
Longitude = lon %>% as.integer()+lonmi %>%as.numeric()/60) %>%
select(station = 1, lon = Longitude, lat = Latitude)
locations.sf = locations %>%
st_as_sf(coords = c("lon", "lat")) %>%
st_set_crs(4326)
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.95, 39.25), ylim = c(-6.5, -6.35))
locations
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.95, 39.25), ylim = c(-6.5, -6.35))+
ggrepel::geom_text_repel(data = locations, aes(x = lon, y = lat, label = station))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
# coord_sf( xlim = c(38.95, 39.25), ylim = c(-6.5, -6.35))+
ggrepel::geom_text_repel(data = locations, aes(x = lon, y = lat, label = station))
ggplot() +
geom_sf(data = locations.sf, size = 4) +
coord_sf( xlim = c(38.95, 40), ylim = c(-6.5, -6.35))+
ggrepel::geom_text_repel(data = locations, aes(x = lon, y = lat, label = station))
